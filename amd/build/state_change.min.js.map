{"version":3,"sources":["../src/state_change.js"],"names":["define","$","Ajax","Notification","Str","t","SELECTOR","STATE_SELECT","CHANGE_STATE_BUTTON","STATE_VALUE_INPUT","SUBMIT_STATE_BUTTON","CHANGE_STATE_NOTIFICATION","CURRENT_STATE_TEXT","init","submitStateButton","lastSelectedState","attr","document","on","stateChangeSelect","changeStateButton","stateValueInput","val","removeAttr","currentStateText","pendingPromise","addPendingJSPromise","require","LoadingIcon","parentElement","addIconToContainerRemoveOnCompletion","args","courseid","cmid","questionid","state","failure","promise","call","methodname","then","results","alert","status","message","resolve","currentSelectedText","find","text","get_string","done","newString","html","window","opener","location","reload","fail","pendingKey","M","util","js_pending","Deferred","js_complete","arguments","catch","exception"],"mappings":"AAuBAA,OAAM,gCAAC,CAAC,QAAD,CAAW,WAAX,CAAwB,mBAAxB,CAA6C,UAA7C,CAAD,CAA2D,SAASC,CAAT,CAAYC,CAAZ,CAAkBC,CAAlB,CAAgCC,CAAhC,CAAqC,CAElG,GAAIC,CAAAA,CAAC,CAAG,CAEJC,QAAQ,CAAE,CACNC,YAAY,CAAE,gBADR,CAENC,mBAAmB,CAAE,sDAFf,CAGNC,iBAAiB,CAAE,mBAHb,CAINC,mBAAmB,CAAE,eAJf,CAKNC,yBAAyB,CAAE,4BALrB,CAMNC,kBAAkB,CAAE,mBANd,CAFN,CAWJC,IAAI,CAAE,eAAW,IACPC,CAAAA,CAAiB,CAAGb,CAAC,CAACI,CAAC,CAACC,QAAF,CAAWI,mBAAZ,CADd,CAETK,CAAiB,CAAGD,CAAiB,CAACE,IAAlB,CAAuB,mBAAvB,CAFX,CAObf,CAAC,CAACgB,QAAD,CAAD,CAAYC,EAAZ,CAAe,QAAf,CAAyBb,CAAC,CAACC,QAAF,CAAWC,YAApC,CAAkD,EAAlD,CAAsD,UAAW,IAGzDY,CAAAA,CAAiB,CAAGlB,CAAC,CAACI,CAAC,CAACC,QAAF,CAAWC,YAAZ,CAHoC,CAIzDa,CAAiB,CAAGnB,CAAC,CAACI,CAAC,CAACC,QAAF,CAAWE,mBAAZ,CAJoC,CAKzDa,CAAe,CAAGpB,CAAC,CAACI,CAAC,CAACC,QAAF,CAAWG,iBAAZ,CALsC,CAMzDK,CAAiB,CAAGb,CAAC,CAACI,CAAC,CAACC,QAAF,CAAWI,mBAAZ,CANoC,CAQ7D,GAAgC,EAA5B,GAAAS,CAAiB,CAACG,GAAlB,IAAkCH,CAAiB,CAACG,GAAlB,KAA4BP,CAAlE,CAAqF,CACjFM,CAAe,CAACC,GAAhB,CAAoBH,CAAiB,CAACG,GAAlB,EAApB,EACAF,CAAiB,CAACG,UAAlB,CAA6B,UAA7B,EACAT,CAAiB,CAACS,UAAlB,CAA6B,UAA7B,CACH,CAJD,IAIO,CACHH,CAAiB,CAACJ,IAAlB,CAAuB,UAAvB,CAAmC,UAAnC,EACAF,CAAiB,CAACE,IAAlB,CAAuB,UAAvB,CAAmC,UAAnC,CACH,CACJ,CAhBD,EAkBAf,CAAC,CAACgB,QAAD,CAAD,CAAYC,EAAZ,CAAe,OAAf,CAAwBb,CAAC,CAACC,QAAF,CAAWI,mBAAnC,CAAwD,EAAxD,CAA4D,UAAW,IAG/DS,CAAAA,CAAiB,CAAGlB,CAAC,CAACI,CAAC,CAACC,QAAF,CAAWC,YAAZ,CAH0C,CAI/DO,CAAiB,CAAGb,CAAC,CAACI,CAAC,CAACC,QAAF,CAAWI,mBAAZ,CAJ0C,CAK7Dc,CAAgB,CAAGvB,CAAC,CAACI,CAAC,CAACC,QAAF,CAAWM,kBAAZ,CALyC,CAOnEE,CAAiB,CAACE,IAAlB,CAAuB,UAAvB,CAAmC,UAAnC,EACA,GAAIS,CAAAA,CAAc,CAAGpB,CAAC,CAACqB,mBAAF,CAAsB,wBAAtB,CAArB,CACAC,OAAO,CAAC,CAAC,kBAAD,CAAD,CAAuB,SAASC,CAAT,CAAsB,CAChD,GAAIC,CAAAA,CAAa,CAAG5B,CAAC,CAACI,CAAC,CAACC,QAAF,CAAWK,yBAAZ,CAArB,CACAiB,CAAW,CAACE,oCAAZ,CAAiDD,CAAjD,CAAgEJ,CAAhE,CACH,CAHM,CAAP,CATmE,GAa/DM,CAAAA,CAAI,CAAG,CACPC,QAAQ,CAAElB,CAAiB,CAACE,IAAlB,CAAuB,eAAvB,CADH,CAEPiB,IAAI,CAAEnB,CAAiB,CAACE,IAAlB,CAAuB,WAAvB,CAFC,CAGPkB,UAAU,CAAEpB,CAAiB,CAACE,IAAlB,CAAuB,iBAAvB,CAHL,CAIPmB,KAAK,CAAEhB,CAAiB,CAACG,GAAlB,EAJA,CAbwD,CAmB/Dc,CAnB+D,CAoB/DC,CAAO,CAAGnC,CAAI,CAACoC,IAAL,CAAU,CAAC,CAACC,UAAU,CAAE,2BAAb,CAA0CR,IAAI,CAAEA,CAAhD,CAAD,CAAV,OApBqD,CAqBnEM,CAAO,CAAC,CAAD,CAAP,CAAWG,IAAX,CAAgB,SAASC,CAAT,CAAkB,CAC9BtC,CAAY,CAACuC,KAAb,CAAmBD,CAAO,CAACE,MAA3B,CAAmCF,CAAO,CAACG,OAA3C,EACAnB,CAAc,CAACoB,OAAf,GACA9B,CAAiB,CAAGI,CAAiB,CAACG,GAAlB,EAApB,CACA,GAAMwB,CAAAA,CAAmB,CAAG3B,CAAiB,CAAC4B,IAAlB,CAAuB,iBAAvB,EAA0CC,IAA1C,EAA5B,CACA5C,CAAG,CAAC6C,UAAJ,CAAe,oBAAf,CAAqC,aAArC,CAAoDH,CAApD,EAAyEI,IAAzE,CAA8E,SAAAC,CAAS,CAAI,CACvF3B,CAAgB,CAAC4B,IAAjB,CAAsBD,CAAtB,CACH,CAFD,EAIAE,MAAM,CAACC,MAAP,CAAcC,QAAd,CAAuBC,MAAvB,EAGH,CAZD,EAYGC,IAZH,CAYQrB,CAZR,CAaH,CAlCD,CAmCH,CAvEG,CAgFJV,mBAAmB,CAAE,6BAASgC,CAAT,CAAqB,CACtCC,CAAC,CAACC,IAAF,CAAOC,UAAP,CAAkBH,CAAlB,EAEA,GAAIjC,CAAAA,CAAc,CAAGxB,CAAC,CAAC6D,QAAF,EAArB,CACArC,CAAc,CAACe,IAAf,CAAoB,UAAW,CAC3BmB,CAAC,CAACC,IAAF,CAAOG,WAAP,CAAmBL,CAAnB,EACA,MAAOM,CAAAA,SAAS,CAAC,CAAD,CACnB,CAHD,EAGGC,KAHH,CAGS9D,CAAY,CAAC+D,SAHtB,EAKA,MAAOzC,CAAAA,CACV,CA1FG,CAAR,CA6FA,MAAOpB,CAAAA,CACV,CAhGK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for state change dialog\n *\n * @module    mod_studentquiz/state_change\n * @copyright 2019 HSR (http://www.hsr.ch)\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/str'], function($, Ajax, Notification, Str) {\n\n    var t = {\n\n        SELECTOR: {\n            STATE_SELECT: '#menustatetype',\n            CHANGE_STATE_BUTTON: 'div.singlebutton.continue_state_change [type=submit]',\n            STATE_VALUE_INPUT: 'input[name=state]',\n            SUBMIT_STATE_BUTTON: '#change_state',\n            CHANGE_STATE_NOTIFICATION: 'span.change-question-state',\n            CURRENT_STATE_TEXT: 'div.current-state',\n        },\n\n        init: function() {\n            const submitStateButton = $(t.SELECTOR.SUBMIT_STATE_BUTTON);\n            let lastSelectedState = submitStateButton.attr('data-currentstate');\n\n            // TODO: Something rerenders or manipulates the modal elements, so the event has to be attached to the\n            // document - see #278. Better would be using the dialog framework similiar to the comment_area instead of\n            // putting the dialog together manually in the renderer functions.\n            $(document).on('change', t.SELECTOR.STATE_SELECT, {}, function() {\n                // Since it happens that the modal elements gets rerendered or manipulated in some way, the elements\n                // need to be obtained freshly.\n                var stateChangeSelect = $(t.SELECTOR.STATE_SELECT);\n                var changeStateButton = $(t.SELECTOR.CHANGE_STATE_BUTTON);\n                var stateValueInput = $(t.SELECTOR.STATE_VALUE_INPUT);\n                var submitStateButton = $(t.SELECTOR.SUBMIT_STATE_BUTTON);\n\n                if (stateChangeSelect.val() !== '' && stateChangeSelect.val() !== lastSelectedState) {\n                    stateValueInput.val(stateChangeSelect.val());\n                    changeStateButton.removeAttr('disabled');\n                    submitStateButton.removeAttr('disabled');\n                } else {\n                    changeStateButton.attr('disabled', 'disabled');\n                    submitStateButton.attr('disabled', 'disabled');\n                }\n            });\n\n            $(document).on('click', t.SELECTOR.SUBMIT_STATE_BUTTON, {}, function() {\n                // Since it happens that the modal elements gets rerendered or manipulated in some way, the elements\n                // need to be obtained freshly.\n                var stateChangeSelect = $(t.SELECTOR.STATE_SELECT);\n                var submitStateButton = $(t.SELECTOR.SUBMIT_STATE_BUTTON);\n                const currentStateText = $(t.SELECTOR.CURRENT_STATE_TEXT);\n\n                submitStateButton.attr('disabled', 'disabled');\n                var pendingPromise = t.addPendingJSPromise('studentquizStateChange');\n                require(['core/loadingicon'], function(LoadingIcon) {\n                    var parentElement = $(t.SELECTOR.CHANGE_STATE_NOTIFICATION);\n                    LoadingIcon.addIconToContainerRemoveOnCompletion(parentElement, pendingPromise);\n                });\n                var args = {\n                    courseid: submitStateButton.attr('data-courseid'),\n                    cmid: submitStateButton.attr('data-cmid'),\n                    questionid: submitStateButton.attr('data-questionid'),\n                    state: stateChangeSelect.val()\n                };\n                var failure;\n                var promise = Ajax.call([{methodname: 'mod_studentquiz_set_state', args: args}], true, true);\n                promise[0].then(function(results) {\n                    Notification.alert(results.status, results.message);\n                    pendingPromise.resolve();\n                    lastSelectedState = stateChangeSelect.val();\n                    const currentSelectedText = stateChangeSelect.find('option:selected').text();\n                    Str.get_string('changecurrentstate', 'studentquiz', currentSelectedText).done(newString => {\n                        currentStateText.html(newString);\n                    });\n                    // Reload the Studentquiz page.\n                    window.opener.location.reload();\n                    // Each then() should return a value or throw (promise/always-return).\n                    return;\n                }).fail(failure);\n            });\n        },\n\n        /**\n         * Add Pending Promise to current session.\n         *\n         *\n         * @param {string} pendingKey JSPending key\n         * @returns {*|jQuery|{}} Pending Promise\n         */\n        addPendingJSPromise: function(pendingKey) {\n            M.util.js_pending(pendingKey);\n\n            var pendingPromise = $.Deferred();\n            pendingPromise.then(function() {\n                M.util.js_complete(pendingKey);\n                return arguments[0];\n            }).catch(Notification.exception);\n\n            return pendingPromise;\n        },\n    };\n\n    return t;\n});\n"],"file":"state_change.min.js"}